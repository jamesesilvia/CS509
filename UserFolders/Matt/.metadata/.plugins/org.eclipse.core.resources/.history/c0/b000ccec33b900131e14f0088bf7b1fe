package client.abuse_report;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JCheckBox;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;

import common.DocumentSizeFilter;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;

public class ReporterGUI extends JPanel implements CreateReportInterface {
	private JTextField hyphon;
	private JTextField firstNameNotSetWarning;
	private JTextField lastNameNotSetWarning;
	private JTextField addrNotSetWarning;
	private JTextField mandatedNotSetWarning;
	private JTextField phoneNotSetWarning;
	private JTextField relationshipNotSetWarning;
	
	private boolean mandated = false;
	private boolean nonmandated = false;
	
	private JLabel reporterLbl;
	private JLabel firstNameLbl;
	private JLabel lastNameLbl;
	private JLabel addrLbl;
	private JLabel relationshipLbl;
	private JLabel telephoneLbl;
	
	private JTextArea addrTextArea;
	
	private JCheckBox mandatedCB;
	private JCheckBox notMandatedCB;
	
	private JFormattedTextField relationshipTextField;
	private JFormattedTextField firstNameTextField;
	private JFormattedTextField lastNameTextField;
	private JFormattedTextField phoneAreaCode, phoneFirstThree, phoneLastFour;
	private DocumentSizeFilter filter;
	
	/**
	 * Create the panel.
	 */
	public ReporterGUI() {
		// Used for setupTextField
		filter = new DocumentSizeFilter(10);;
		
		phoneNotSetWarning = new JTextField();
		phoneNotSetWarning.setVisible(false);
		phoneNotSetWarning.setText("*");
		phoneNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		phoneNotSetWarning.setForeground(Color.RED);
		phoneNotSetWarning.setEditable(false);
		
		phoneAreaCode = new JFormattedTextField();
		filter.setupTextField(phoneAreaCode, DocumentSizeFilter.NO, 3);
		
		hyphon = new JTextField();
		hyphon.setHorizontalAlignment(SwingConstants.CENTER);
		hyphon.setEditable(false);
		hyphon.setText("-");
		hyphon.setColumns(10);
		
		phoneFirstThree = new JFormattedTextField();
		filter.setupTextField(phoneFirstThree, DocumentSizeFilter.NO, 3);
		
		phoneLastFour = new JFormattedTextField();
		filter.setupTextField(phoneLastFour, DocumentSizeFilter.NO, 4);
		
		relationshipNotSetWarning = new JTextField();
		relationshipNotSetWarning.setVisible(false);
		relationshipNotSetWarning.setText("*");
		relationshipNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		relationshipNotSetWarning.setForeground(Color.RED);
		relationshipNotSetWarning.setEditable(false);
		
		relationshipTextField = new JFormattedTextField();
		filter.setupTextField(relationshipTextField, DocumentSizeFilter.ANY, 20);
		
		JPanel panel = new JPanel();
		GroupLayout groupLayout = new GroupLayout(this);
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addGroup(groupLayout.createSequentialGroup()
							.addGap(233)
							.addComponent(phoneNotSetWarning, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
							.addGap(25)
							.addComponent(phoneAreaCode, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
							.addGap(5)
							.addComponent(hyphon, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
							.addGap(5)
							.addComponent(phoneFirstThree, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
							.addGap(5)
							.addComponent(phoneLastFour, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
						.addGroup(groupLayout.createSequentialGroup()
							.addGap(253)
							.addComponent(relationshipNotSetWarning, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
							.addGap(5)
							.addComponent(relationshipTextField, GroupLayout.PREFERRED_SIZE, 260, GroupLayout.PREFERRED_SIZE))
						.addGroup(groupLayout.createSequentialGroup()
							.addGap(22)
							.addComponent(panel, GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)))
					.addContainerGap())
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(197)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addComponent(phoneNotSetWarning, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(phoneAreaCode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(hyphon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(phoneFirstThree, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(phoneLastFour, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(5)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addComponent(relationshipNotSetWarning, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(relationshipTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 234, GroupLayout.PREFERRED_SIZE)
					.addContainerGap())
		);
		GridBagLayout gbl_panel = new GridBagLayout();
		gbl_panel.columnWidths = new int[]{0, 20, 100, 0, 0, 100, 0};
		gbl_panel.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0};
		gbl_panel.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panel.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel.setLayout(gbl_panel);
		
		reporterLbl = new JLabel("Reporter");
		GridBagConstraints gbc_reporterLbl = new GridBagConstraints();
		gbc_reporterLbl.insets = new Insets(0, 0, 5, 5);
		gbc_reporterLbl.gridx = 0;
		gbc_reporterLbl.gridy = 0;
		panel.add(reporterLbl, gbc_reporterLbl);
		reporterLbl.setFont(new Font("Tahoma", Font.BOLD, 15));
		
		firstNameLbl = new JLabel("Name:");
		GridBagConstraints gbc_firstNameLbl = new GridBagConstraints();
		gbc_firstNameLbl.insets = new Insets(0, 0, 5, 5);
		gbc_firstNameLbl.gridx = 0;
		gbc_firstNameLbl.gridy = 1;
		panel.add(firstNameLbl, gbc_firstNameLbl);
		
		firstNameNotSetWarning = new JTextField();
		GridBagConstraints gbc_firstNameNotSetWarning = new GridBagConstraints();
		gbc_firstNameNotSetWarning.insets = new Insets(0, 0, 5, 5);
		gbc_firstNameNotSetWarning.gridx = 1;
		gbc_firstNameNotSetWarning.gridy = 1;
		panel.add(firstNameNotSetWarning, gbc_firstNameNotSetWarning);
		firstNameNotSetWarning.setVisible(false);
		firstNameNotSetWarning.setEditable(false);
		firstNameNotSetWarning.setForeground(Color.RED);
		firstNameNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		firstNameNotSetWarning.setText("*");
		
		firstNameTextField = new JFormattedTextField();
		GridBagConstraints gbc_firstNameTextField = new GridBagConstraints();
		gbc_firstNameTextField.fill = GridBagConstraints.HORIZONTAL;
		gbc_firstNameTextField.insets = new Insets(0, 0, 5, 5);
		gbc_firstNameTextField.gridx = 2;
		gbc_firstNameTextField.gridy = 1;
		panel.add(firstNameTextField, gbc_firstNameTextField);
		filter.setupTextField(firstNameTextField, DocumentSizeFilter.CHAR, 16);
		
		lastNameLbl = new JLabel("Last Name:");
		GridBagConstraints gbc_lastNameLbl = new GridBagConstraints();
		gbc_lastNameLbl.insets = new Insets(0, 0, 5, 5);
		gbc_lastNameLbl.gridx = 3;
		gbc_lastNameLbl.gridy = 1;
		panel.add(lastNameLbl, gbc_lastNameLbl);
		
		lastNameNotSetWarning = new JTextField();
		GridBagConstraints gbc_lastNameNotSetWarning = new GridBagConstraints();
		gbc_lastNameNotSetWarning.insets = new Insets(0, 0, 5, 5);
		gbc_lastNameNotSetWarning.gridx = 4;
		gbc_lastNameNotSetWarning.gridy = 1;
		panel.add(lastNameNotSetWarning, gbc_lastNameNotSetWarning);
		lastNameNotSetWarning.setVisible(false);
		lastNameNotSetWarning.setText("*");
		lastNameNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		lastNameNotSetWarning.setForeground(Color.RED);
		lastNameNotSetWarning.setEditable(false);
		
		lastNameTextField = new JFormattedTextField();
		GridBagConstraints gbc_lastNameTextField = new GridBagConstraints();
		gbc_lastNameTextField.fill = GridBagConstraints.HORIZONTAL;
		gbc_lastNameTextField.insets = new Insets(0, 0, 5, 0);
		gbc_lastNameTextField.gridx = 5;
		gbc_lastNameTextField.gridy = 1;
		panel.add(lastNameTextField, gbc_lastNameTextField);
		filter.setupTextField(lastNameTextField, DocumentSizeFilter.CHAR, 16);
		
		addrLbl = new JLabel("Address:");
		GridBagConstraints gbc_addrLbl = new GridBagConstraints();
		gbc_addrLbl.insets = new Insets(0, 0, 5, 5);
		gbc_addrLbl.gridx = 0;
		gbc_addrLbl.gridy = 2;
		panel.add(addrLbl, gbc_addrLbl);
		
		addrNotSetWarning = new JTextField();
		GridBagConstraints gbc_addrNotSetWarning = new GridBagConstraints();
		gbc_addrNotSetWarning.insets = new Insets(0, 0, 5, 5);
		gbc_addrNotSetWarning.gridx = 1;
		gbc_addrNotSetWarning.gridy = 2;
		panel.add(addrNotSetWarning, gbc_addrNotSetWarning);
		addrNotSetWarning.setVisible(false);
		addrNotSetWarning.setText("*");
		addrNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		addrNotSetWarning.setForeground(Color.RED);
		addrNotSetWarning.setEditable(false);
		
		addrTextArea = new JTextArea();
		addrTextArea.setColumns(10);
		addrTextArea.setLineWrap(true);
		addrTextArea.setWrapStyleWord(true);
		filter.setupTextField(addrTextArea, DocumentSizeFilter.ANY, 50);
		
				
				JScrollPane addrTextScrollPane = new JScrollPane(addrTextArea);
				GridBagConstraints gbc_addrTextScrollPane = new GridBagConstraints();
				gbc_addrTextScrollPane.insets = new Insets(0, 0, 5, 5);
				gbc_addrTextScrollPane.gridx = 2;
				gbc_addrTextScrollPane.gridy = 2;
				panel.add(addrTextScrollPane, gbc_addrTextScrollPane);
				addrTextScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
		
		mandatedNotSetWarning = new JTextField();
		GridBagConstraints gbc_mandatedNotSetWarning = new GridBagConstraints();
		gbc_mandatedNotSetWarning.anchor = GridBagConstraints.WEST;
		gbc_mandatedNotSetWarning.insets = new Insets(0, 0, 5, 5);
		gbc_mandatedNotSetWarning.gridx = 4;
		gbc_mandatedNotSetWarning.gridy = 2;
		panel.add(mandatedNotSetWarning, gbc_mandatedNotSetWarning);
		mandatedNotSetWarning.setVisible(false);
		mandatedNotSetWarning.setText("*");
		mandatedNotSetWarning.setHorizontalAlignment(SwingConstants.CENTER);
		mandatedNotSetWarning.setForeground(Color.RED);
		mandatedNotSetWarning.setEditable(false);
		
		mandatedCB = new JCheckBox("Mandated");
		GridBagConstraints gbc_mandatedCB = new GridBagConstraints();
		gbc_mandatedCB.insets = new Insets(0, 0, 5, 0);
		gbc_mandatedCB.gridx = 5;
		gbc_mandatedCB.gridy = 2;
		panel.add(mandatedCB, gbc_mandatedCB);
		
		mandatedCB.addItemListener(new ItemListener() {
			
			@Override
			public void itemStateChanged(ItemEvent event) {
				if(event.getStateChange() == ItemEvent.SELECTED) {
					notMandatedCB.setEnabled(false);
					mandated = true;
				} else {
					mandated = false;
					notMandatedCB.setEnabled(true);
				}
			}
		});
		
		notMandatedCB = new JCheckBox("Not Mandated");
		GridBagConstraints gbc_notMandatedCB = new GridBagConstraints();
		gbc_notMandatedCB.insets = new Insets(0, 0, 5, 0);
		gbc_notMandatedCB.gridx = 5;
		gbc_notMandatedCB.gridy = 3;
		panel.add(notMandatedCB, gbc_notMandatedCB);
		
		notMandatedCB.addItemListener(new ItemListener() {
			
			@Override
			public void itemStateChanged(ItemEvent event) {
				if(event.getStateChange() == ItemEvent.SELECTED) {
					mandatedCB.setEnabled(false);
					nonmandated = true;
				} else {
					nonmandated = false;
					mandatedCB.setEnabled(true);
				}
			}
		});
		
		telephoneLbl = new JLabel("Daytime Telephone:");
		GridBagConstraints gbc_telephoneLbl = new GridBagConstraints();
		gbc_telephoneLbl.insets = new Insets(0, 0, 5, 5);
		gbc_telephoneLbl.gridx = 0;
		gbc_telephoneLbl.gridy = 4;
		panel.add(telephoneLbl, gbc_telephoneLbl);
		
		relationshipLbl = new JLabel("Relationship to Alleged Victim:");
		GridBagConstraints gbc_relationshipLbl = new GridBagConstraints();
		gbc_relationshipLbl.insets = new Insets(0, 0, 0, 5);
		gbc_relationshipLbl.gridx = 0;
		gbc_relationshipLbl.gridy = 6;
		panel.add(relationshipLbl, gbc_relationshipLbl);
		setLayout(groupLayout);

	}

	/**
	 * Checks that all information has been entered for a Reporter.
	 */
	@Override
	public boolean isValidInfo() {
		boolean validInfo = true;
		if(firstNameTextField.getText().equals("")){
			firstNameNotSetWarning.setVisible(true);
			validInfo = false;
		}
		if(lastNameTextField.getText().equals("")){
			lastNameNotSetWarning.setVisible(true);
			validInfo = false;
		}
		if(addrTextArea.getText().equals("")){
			addrNotSetWarning.setVisible(true);
			validInfo = false;
		}
		if(!mandatedCB.isSelected() && !notMandatedCB.isSelected()) {
			mandatedNotSetWarning.setVisible(true);
			validInfo = false;
		}
		if((phoneFirstThree.getText().length() != 3) || (phoneAreaCode.getText().length() != 3) || (phoneLastFour.getText().length() != 4)) {
			phoneNotSetWarning.setVisible(true);
			validInfo = false;
		}
		if(relationshipTextField.getText().equals("")){
			relationshipNotSetWarning.setVisible(true);
			validInfo = false;
		}
		
		return validInfo;
	}

	/**
	 * Returns a handle to a created Reporter Object. This object is populated with information from the panel.
	 */
	@Override
	public Object commitInfo() {
		Object obj;
		Reporter reporter = new Reporter();
		
		reporter.setFirstName(firstNameTextField.getText());
		reporter.setLastName(lastNameTextField.getText());
		reporter.setAddress(addrTextArea.getText());
		reporter.setMandated(mandatedCB.isSelected());
		reporter.setTelephone(phoneAreaCode.getText().concat(phoneFirstThree.getText().concat(phoneLastFour.getText())));
		reporter.setRelationshipToVictim(relationshipTextField.getText());
		
		obj = reporter;
		return obj;
	}
}
